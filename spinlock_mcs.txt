
spinlock_mcs.o:     file format elf64-x86-64


Disassembly of section .init:

00000000004004d8 <_init>:
  4004d8:	48 83 ec 08          	sub    $0x8,%rsp
  4004dc:	e8 8b 00 00 00       	callq  40056c <call_gmon_start>
  4004e1:	e8 1a 01 00 00       	callq  400600 <frame_dummy>
  4004e6:	e8 45 02 00 00       	callq  400730 <__do_global_ctors_aux>
  4004eb:	48 83 c4 08          	add    $0x8,%rsp
  4004ef:	c3                   	retq   

Disassembly of section .plt:

00000000004004f0 <std::ios_base::Init::Init()@plt-0x10>:
  4004f0:	ff 35 fa 0a 20 00    	pushq  0x200afa(%rip)        # 600ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004f6:	ff 25 fc 0a 20 00    	jmpq   *0x200afc(%rip)        # 600ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400500 <std::ios_base::Init::Init()@plt>:
  400500:	ff 25 fa 0a 20 00    	jmpq   *0x200afa(%rip)        # 601000 <_GLOBAL_OFFSET_TABLE_+0x18>
  400506:	68 00 00 00 00       	pushq  $0x0
  40050b:	e9 e0 ff ff ff       	jmpq   4004f0 <_init+0x18>

0000000000400510 <__libc_start_main@plt>:
  400510:	ff 25 f2 0a 20 00    	jmpq   *0x200af2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x20>
  400516:	68 01 00 00 00       	pushq  $0x1
  40051b:	e9 d0 ff ff ff       	jmpq   4004f0 <_init+0x18>

0000000000400520 <__cxa_atexit@plt>:
  400520:	ff 25 ea 0a 20 00    	jmpq   *0x200aea(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x28>
  400526:	68 02 00 00 00       	pushq  $0x2
  40052b:	e9 c0 ff ff ff       	jmpq   4004f0 <_init+0x18>

0000000000400530 <std::ios_base::Init::~Init()@plt>:
  400530:	ff 25 e2 0a 20 00    	jmpq   *0x200ae2(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x30>
  400536:	68 03 00 00 00       	pushq  $0x3
  40053b:	e9 b0 ff ff ff       	jmpq   4004f0 <_init+0x18>

Disassembly of section .text:

0000000000400540 <_start>:
  400540:	31 ed                	xor    %ebp,%ebp
  400542:	49 89 d1             	mov    %rdx,%r9
  400545:	5e                   	pop    %rsi
  400546:	48 89 e2             	mov    %rsp,%rdx
  400549:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40054d:	50                   	push   %rax
  40054e:	54                   	push   %rsp
  40054f:	49 c7 c0 20 07 40 00 	mov    $0x400720,%r8
  400556:	48 c7 c1 90 06 40 00 	mov    $0x400690,%rcx
  40055d:	48 c7 c7 24 06 40 00 	mov    $0x400624,%rdi
  400564:	e8 a7 ff ff ff       	callq  400510 <__libc_start_main@plt>
  400569:	f4                   	hlt    
  40056a:	90                   	nop
  40056b:	90                   	nop

000000000040056c <call_gmon_start>:
  40056c:	48 83 ec 08          	sub    $0x8,%rsp
  400570:	48 8b 05 69 0a 20 00 	mov    0x200a69(%rip),%rax        # 600fe0 <_DYNAMIC+0x1c0>
  400577:	48 85 c0             	test   %rax,%rax
  40057a:	74 02                	je     40057e <call_gmon_start+0x12>
  40057c:	ff d0                	callq  *%rax
  40057e:	48 83 c4 08          	add    $0x8,%rsp
  400582:	c3                   	retq   
  400583:	90                   	nop
  400584:	90                   	nop
  400585:	90                   	nop
  400586:	90                   	nop
  400587:	90                   	nop
  400588:	90                   	nop
  400589:	90                   	nop
  40058a:	90                   	nop
  40058b:	90                   	nop
  40058c:	90                   	nop
  40058d:	90                   	nop
  40058e:	90                   	nop
  40058f:	90                   	nop

0000000000400590 <__do_global_dtors_aux>:
  400590:	55                   	push   %rbp
  400591:	48 89 e5             	mov    %rsp,%rbp
  400594:	53                   	push   %rbx
  400595:	48 83 ec 08          	sub    $0x8,%rsp
  400599:	80 3d 90 0a 20 00 00 	cmpb   $0x0,0x200a90(%rip)        # 601030 <__bss_start>
  4005a0:	75 4b                	jne    4005ed <__do_global_dtors_aux+0x5d>
  4005a2:	bb 10 0e 60 00       	mov    $0x600e10,%ebx
  4005a7:	48 8b 05 8a 0a 20 00 	mov    0x200a8a(%rip),%rax        # 601038 <dtor_idx.6460>
  4005ae:	48 81 eb 08 0e 60 00 	sub    $0x600e08,%rbx
  4005b5:	48 c1 fb 03          	sar    $0x3,%rbx
  4005b9:	48 83 eb 01          	sub    $0x1,%rbx
  4005bd:	48 39 d8             	cmp    %rbx,%rax
  4005c0:	73 24                	jae    4005e6 <__do_global_dtors_aux+0x56>
  4005c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4005c8:	48 83 c0 01          	add    $0x1,%rax
  4005cc:	48 89 05 65 0a 20 00 	mov    %rax,0x200a65(%rip)        # 601038 <dtor_idx.6460>
  4005d3:	ff 14 c5 08 0e 60 00 	callq  *0x600e08(,%rax,8)
  4005da:	48 8b 05 57 0a 20 00 	mov    0x200a57(%rip),%rax        # 601038 <dtor_idx.6460>
  4005e1:	48 39 d8             	cmp    %rbx,%rax
  4005e4:	72 e2                	jb     4005c8 <__do_global_dtors_aux+0x38>
  4005e6:	c6 05 43 0a 20 00 01 	movb   $0x1,0x200a43(%rip)        # 601030 <__bss_start>
  4005ed:	48 83 c4 08          	add    $0x8,%rsp
  4005f1:	5b                   	pop    %rbx
  4005f2:	5d                   	pop    %rbp
  4005f3:	c3                   	retq   
  4005f4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4005fb:	00 00 00 00 00 

0000000000400600 <frame_dummy>:
  400600:	48 83 3d 10 08 20 00 	cmpq   $0x0,0x200810(%rip)        # 600e18 <__JCR_END__>
  400607:	00 
  400608:	55                   	push   %rbp
  400609:	48 89 e5             	mov    %rsp,%rbp
  40060c:	74 12                	je     400620 <frame_dummy+0x20>
  40060e:	b8 00 00 00 00       	mov    $0x0,%eax
  400613:	48 85 c0             	test   %rax,%rax
  400616:	74 08                	je     400620 <frame_dummy+0x20>
  400618:	5d                   	pop    %rbp
  400619:	bf 18 0e 60 00       	mov    $0x600e18,%edi
  40061e:	ff e0                	jmpq   *%rax
  400620:	5d                   	pop    %rbp
  400621:	c3                   	retq   
  400622:	90                   	nop
  400623:	90                   	nop

0000000000400624 <main>:
  400624:	55                   	push   %rbp
  400625:	48 89 e5             	mov    %rsp,%rbp
  400628:	89 7d fc             	mov    %edi,-0x4(%rbp)
  40062b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40062f:	b8 00 00 00 00       	mov    $0x0,%eax
  400634:	5d                   	pop    %rbp
  400635:	c3                   	retq   

0000000000400636 <__static_initialization_and_destruction_0(int, int)>:
  400636:	55                   	push   %rbp
  400637:	48 89 e5             	mov    %rsp,%rbp
  40063a:	48 83 ec 10          	sub    $0x10,%rsp
  40063e:	89 7d fc             	mov    %edi,-0x4(%rbp)
  400641:	89 75 f8             	mov    %esi,-0x8(%rbp)
  400644:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  400648:	75 2a                	jne    400674 <__static_initialization_and_destruction_0(int, int)+0x3e>
  40064a:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
  400651:	75 21                	jne    400674 <__static_initialization_and_destruction_0(int, int)+0x3e>
  400653:	bf 40 10 60 00       	mov    $0x601040,%edi
  400658:	e8 a3 fe ff ff       	callq  400500 <std::ios_base::Init::Init()@plt>
  40065d:	b8 30 05 40 00       	mov    $0x400530,%eax
  400662:	ba 28 10 60 00       	mov    $0x601028,%edx
  400667:	be 40 10 60 00       	mov    $0x601040,%esi
  40066c:	48 89 c7             	mov    %rax,%rdi
  40066f:	e8 ac fe ff ff       	callq  400520 <__cxa_atexit@plt>
  400674:	c9                   	leaveq 
  400675:	c3                   	retq   

0000000000400676 <_GLOBAL__sub_I_main>:
  400676:	55                   	push   %rbp
  400677:	48 89 e5             	mov    %rsp,%rbp
  40067a:	be ff ff 00 00       	mov    $0xffff,%esi
  40067f:	bf 01 00 00 00       	mov    $0x1,%edi
  400684:	e8 ad ff ff ff       	callq  400636 <__static_initialization_and_destruction_0(int, int)>
  400689:	5d                   	pop    %rbp
  40068a:	c3                   	retq   
  40068b:	90                   	nop
  40068c:	90                   	nop
  40068d:	90                   	nop
  40068e:	90                   	nop
  40068f:	90                   	nop

0000000000400690 <__libc_csu_init>:
  400690:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  400695:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  40069a:	48 8d 2d 57 07 20 00 	lea    0x200757(%rip),%rbp        # 600df8 <__init_array_end>
  4006a1:	4c 8d 25 48 07 20 00 	lea    0x200748(%rip),%r12        # 600df0 <__init_array_start>
  4006a8:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  4006ad:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  4006b2:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  4006b7:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  4006bc:	48 83 ec 38          	sub    $0x38,%rsp
  4006c0:	4c 29 e5             	sub    %r12,%rbp
  4006c3:	41 89 fd             	mov    %edi,%r13d
  4006c6:	49 89 f6             	mov    %rsi,%r14
  4006c9:	48 c1 fd 03          	sar    $0x3,%rbp
  4006cd:	49 89 d7             	mov    %rdx,%r15
  4006d0:	e8 03 fe ff ff       	callq  4004d8 <_init>
  4006d5:	48 85 ed             	test   %rbp,%rbp
  4006d8:	74 1c                	je     4006f6 <__libc_csu_init+0x66>
  4006da:	31 db                	xor    %ebx,%ebx
  4006dc:	0f 1f 40 00          	nopl   0x0(%rax)
  4006e0:	4c 89 fa             	mov    %r15,%rdx
  4006e3:	4c 89 f6             	mov    %r14,%rsi
  4006e6:	44 89 ef             	mov    %r13d,%edi
  4006e9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4006ed:	48 83 c3 01          	add    $0x1,%rbx
  4006f1:	48 39 eb             	cmp    %rbp,%rbx
  4006f4:	75 ea                	jne    4006e0 <__libc_csu_init+0x50>
  4006f6:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  4006fb:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  400700:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  400705:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  40070a:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  40070f:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  400714:	48 83 c4 38          	add    $0x38,%rsp
  400718:	c3                   	retq   
  400719:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400720 <__libc_csu_fini>:
  400720:	f3 c3                	repz retq 
  400722:	90                   	nop
  400723:	90                   	nop
  400724:	90                   	nop
  400725:	90                   	nop
  400726:	90                   	nop
  400727:	90                   	nop
  400728:	90                   	nop
  400729:	90                   	nop
  40072a:	90                   	nop
  40072b:	90                   	nop
  40072c:	90                   	nop
  40072d:	90                   	nop
  40072e:	90                   	nop
  40072f:	90                   	nop

0000000000400730 <__do_global_ctors_aux>:
  400730:	55                   	push   %rbp
  400731:	48 89 e5             	mov    %rsp,%rbp
  400734:	53                   	push   %rbx
  400735:	48 83 ec 08          	sub    $0x8,%rsp
  400739:	48 8b 05 b8 06 20 00 	mov    0x2006b8(%rip),%rax        # 600df8 <__init_array_end>
  400740:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  400744:	74 19                	je     40075f <__do_global_ctors_aux+0x2f>
  400746:	bb f8 0d 60 00       	mov    $0x600df8,%ebx
  40074b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400750:	48 83 eb 08          	sub    $0x8,%rbx
  400754:	ff d0                	callq  *%rax
  400756:	48 8b 03             	mov    (%rbx),%rax
  400759:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40075d:	75 f1                	jne    400750 <__do_global_ctors_aux+0x20>
  40075f:	48 83 c4 08          	add    $0x8,%rsp
  400763:	5b                   	pop    %rbx
  400764:	5d                   	pop    %rbp
  400765:	c3                   	retq   
  400766:	90                   	nop
  400767:	90                   	nop

Disassembly of section .fini:

0000000000400768 <_fini>:
  400768:	48 83 ec 08          	sub    $0x8,%rsp
  40076c:	e8 1f fe ff ff       	callq  400590 <__do_global_dtors_aux>
  400771:	48 83 c4 08          	add    $0x8,%rsp
  400775:	c3                   	retq   
